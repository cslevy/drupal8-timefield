<?php /**
 * @file
 * Contains \Drupal\timefield\Plugin\Field\FieldFormatter\TimeFieldDefaultFormatter.
 */

namespace Drupal\timefield\Plugin\Field\FieldFormatter;

use Drupal\Core\Field\FormatterBase;
use Drupal\Core\Field\FieldItemListInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * @FieldFormatter(
 *  id = "timefield_range_formatter",
 *  label = @Translation("Timefield Range formatter"),
 *  field_types = {"timefield"}
 * )
 */
class TimeFieldRangeFormatter extends FormatterBase {

  /**
   * {@inheritdoc}
   */
  public static function defaultSettings() {

    return array(
      'display_format' => array(
        'hour' => 'g',
        'minute' => 'i',
        'separator' => ':',
        'period' => 'a',
        'period_separator' => ''
      ),
      'range_separator' => ' - '
    ) + parent::defaultSettings();
  }


  public function settingsForm(array $form, FormStateInterface $form_state) {
    $element = parent::settingsForm($form, $form_state); // TODO: Change the autogenerated stub
    $settings = $this->getSettings();
    $element['range_separator'] = [
      '#type' => 'textfield',
      '#title' => $this->t('Range separator'),
      '#default_value' => $settings['range_separator']
    ];
    $element += _timefield_display_format_form('display_format', "Individual Time Display Settings", $settings);
    return $element;
  }

  public function settingsSummary() {
    $summary = parent::settingsSummary(); // TODO: Change the autogenerated stub
    $settings = $this->getSettings();
    $current_time = timefield_time_to_integer(date('g:ia', strtotime("now")));
    $summary[] = $this::t('Current Format') . ': ' . timefield_integer_to_time($settings['display_format'], $current_time);
    return $summary;
  }

  /**
   * {@inheritdoc}
   */
  public function viewElements(FieldItemListInterface $items, $langcode) {
    $settings = $this->getSettings();
    $element = array();
    foreach ($items as $delta => $item) {
      if (!empty($item->value)) {
        $element[$delta]['#markup'] = trim(timefield_integer_to_time($settings['display_format'], $item->value));
      }
      if (!empty($item->end_value)) {
        $element[$delta]['#markup'] .= $settings['range_separator'] . trim(timefield_integer_to_time($settings['display_format'], $item->end_value));
      }
    }

    return $element;
  }
}
